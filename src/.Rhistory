# summary(ur.df(co.resid.umcsent, type="none",selectlags="BIC"))
# summary(ur.df(co.resid.umcsent, type="drift",selectlags="BIC"))
# summary(ur.df(co.resid.umcsent, type="trend",selectlags="BIC"))
#
# co.resid.unrate <- ts_hosr-(coef.unrate[2]*ts_unrate+coef.unrate[1])
# summary(ur.df(co.resid.unrate, type="none",selectlags="BIC"))
# summary(ur.df(co.resid.unrate, type="drift",selectlags="BIC"))
# summary(ur.df(co.resid.unrate, type="trend",selectlags="BIC"))```
# original data - returns the same results as above
lm.mspus <- lm(ts_hosr~ts_mspus)
lm.permit <- lm(ts_hosr~ts_permit)
lm.icsa <- lm(ts_hosr~ts_icsa)
adf.test(residuals(lm.mspus))
adf.test(residuals(lm.permit))
adf.test(residuals(lm.icsa))
summary(ur.df(residuals(lm.mspus), type="none", selectlags="BIC"))
summary(ur.df(residuals(lm.mspus), type="drift", selectlags="BIC"))
summary(ur.df(residuals(lm.mspus), type="trend", selectlags="BIC"))
# log transformed data - no cointegration detected
lm.mspus_log <- lm(log(ts_hosr)~log(ts_mspus))
lm.permit_log <- lm(log(ts_hosr)~log(ts_permit))
lm.icsa_log <- lm(log(ts_hosr)~log(ts_icsa))
adf.test(residuals(lm.mspus_log))
adf.test(residuals(lm.permit_log))
adf.test(residuals(lm.icsa_log))
summary(ur.df(residuals(lm.mspus_log), type="none", selectlags="BIC"))
summary(ur.df(residuals(lm.mspus_log), type="drift", selectlags="BIC"))
summary(ur.df(residuals(lm.mspus_log), type="trend", selectlags="BIC"))
summary(ur.df(residuals(lm.permit_log), type="none", selectlags="BIC"))
summary(ur.df(residuals(lm.permit_log), type="drift", selectlags="BIC"))
summary(ur.df(residuals(lm.permit_log), type="trend", selectlags="BIC"))
summary(ur.df(residuals(lm.icsa_log), type="none", selectlags="BIC"))
summary(ur.df(residuals(lm.icsa_log), type="drift", selectlags="BIC"))
summary(ur.df(residuals(lm.icsa_log), type="trend", selectlags="BIC"))
time.pts = c(1:length(hosr[,"hosr"]))
time.pts = c(time.pts - min(time.pts))/max(time.pts)
x <- time.pts[1:153]
m_spl_org = gam(training[,"hosr"]~s(x))
m_spl_org.fit = fitted(m_spl_org)
m_spl_org.fit = ts(m_spl_org.fit,start=1980, freq=4)
resid.process = training[,"hosr"]-m_spl_org.fit
resid.process = ts(resid.process,start=1980, freq=4)
par(mfrow=c(2,2))
plot(ts_hosr,xlab="Years",ylab="Home ownership rate",type="l")
lines(m_spl_org.fit,lwd=2,col="blue")
plot(resid.process,xlab="Years",ylab="De-Trended Time Series",type="l")
acf(resid.process,main="ACF: De-trended TS")
pacf(resid.process,main="PACF: De-trended TS")
n = length(resid.process)
norder = 6
aicc <- data.frame(Inf,Inf,Inf,Inf)
names(aicc) <- c("p","d","q","aicc")
test_arima <- function(train,p,d,q,n){
fit <-arima(train,order = c(p,d,q), method='ML')
curr.aicc <- fit$aic-2*(p+q+1)+2*(p+q+1)*n/(n-p-q-2)
df <- data.frame(p,d,q,curr.aicc)
names(df) <- c("p","d","q","aicc")
return(df)
}
for(p in 1:norder){
for(d in 0:1){
for(q in 1:norder){
aicc = rbind(aicc,test_arima(resid.process,p,d,q,n))
}
}
}
aicc <- aicc[order(aicc$aicc),]
m1.orders = c(aicc$p[1],aicc$d[1],aicc$q[1])
m_arma_org = arima(resid.process,order = m1.orders, method='ML')
m_arma_org.res = resid(m_arma_org)
## Residual Analysis
par (mfrow=c(2,2))
plot(m_arma_org.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_arma_org.res,main= 'ACF of the Model Residuals')
pacf(m_arma_org.res,main='PACF of the Model Residuals')
qqnorm(m_arma_org.res)
qqline(m_arma_org.res)
time.pts = c(1:length(hosr_log[,"hosr"]))
time.pts = c(time.pts - min(time.pts))/max(time.pts)
x <- time.pts[1:153]
m_spl_log = gam(training_log[,"hosr"]~s(x))
m_spl_log.fit = fitted(m_spl_log)
m_spl_log.fit = ts(m_spl_log.fit,start=1980, freq=4)
resid.process = training_log[,"hosr"]-m_spl_log.fit
resid.process = ts(resid.process,start=1980, freq=4)
par(mfrow=c(2,2))
plot(ts_hosr_log,xlab="Years",ylab="Home ownership rate",type="l")
lines(m_spl_log.fit,lwd=2,col="blue")
plot(resid.process,xlab="Years",ylab="De-Trended Time Series",type="l")
acf(resid.process,main="ACF: De-trended TS")
pacf(resid.process,main="PACF: De-trended TS")
n = length(resid.process)
norder = 6
aicc <- data.frame(Inf,Inf,Inf,Inf)
names(aicc) <- c("p","d","q","aicc")
test_arima <- function(train,p,d,q,n){
fit <-arima(train,order = c(p,d,q), method='ML')
curr.aicc <- fit$aic-2*(p+q+1)+2*(p+q+1)*n/(n-p-q-2)
df <- data.frame(p,d,q,curr.aicc)
names(df) <- c("p","d","q","aicc")
return(df)
}
for(p in 1:norder){
for(d in 0:1){
for(q in 1:norder){
aicc = rbind(aicc,test_arima(resid.process,p,d,q,n))
}
}
}
aicc <- aicc[order(aicc$aicc),]
m1.orders = c(aicc$p[1],aicc$d[1],aicc$q[1])
m_arma_log = arima(resid.process,order = m1.orders, method='ML')
m_arma_log.res = resid(m_arma_log)
## Residual Analysis
par (mfrow=c(2,2))
plot(m_arma_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_arma_log.res,main= 'ACF of the Model Residuals')
pacf(m_arma_log.res,main='PACF of the Model Residuals')
qqnorm(m_arma_log.res)
qqline(m_arma_log.res)
n = length(training[,"hosr"])
norder = 6
aicc <- data.frame(Inf,Inf,Inf,Inf)
names(aicc) <- c("p","d","q","aicc")
test_arima <- function(train,p,d,q,n){
fit <-arima(train,order = c(p,d,q), method='ML')
curr.aicc <- fit$aic-2*(p+q+1)+2*(p+q+1)*n/(n-p-q-2)
df <- data.frame(p,d,q,curr.aicc)
names(df) <- c("p","d","q","aicc")
return(df)
}
for(p in 1:norder){
for(d in 0:1){
for(q in 1:norder){
possibleError <- tryCatch(
aicc <- rbind(aicc,test_arima(training[,"hosr"],p,d,q,n)),
error = function(e) e
)
if(inherits(possibleError,"error")) next
}
}
}
aicc <- aicc[order(aicc$aicc),]
m2.orders = c(aicc$p[1],aicc$d[1],aicc$q[1])
m_arima_ori = arima(training[,"hosr"], order = m2.orders, method = "ML")
m_arima_ori.res = resid(m_arima_ori)
## Residual Analysis
par (mfrow=c(2,2))
plot(m_arima_ori.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_arima_ori.res,main= 'ACF of the Model Residuals')
pacf(m_arima_ori.res,main='PACF of the Model Residuals')
qqnorm(m_arima_ori.res)
qqline(m_arima_ori.res)
Box.test(m_arima_ori$resid, lag = (aicc$p[1]+aicc$q[1]+1), type = "Box-Pierce", fitdf = (aicc$p[1]+aicc$q[1]))
Box.test(m_arima_ori$resid, lag = (aicc$p[1]+aicc$q[1]+1), type = "Ljung-Box", fitdf = (aicc$p[1]+aicc$q[1]))
n = length(training_log[,"hosr"])
norder = 6
aicc <- data.frame(Inf,Inf,Inf,Inf)
names(aicc) <- c("p","d","q","aicc")
for(p in 1:norder){
for(d in 0:1){
for(q in 1:norder){
possibleError <- tryCatch(
aicc <- rbind(aicc,test_arima(training_log[,"hosr"],p,d,q,n)),
error = function(e) e
)
if(inherits(possibleError,"error")) next
}
}
}
aicc <- aicc[order(aicc$aicc),]
m2.orders = c(aicc$p[1],aicc$d[1],aicc$q[1])
m_arima_log = arima(training_log[,"hosr"], order = m2.orders, method = "ML")
m_arima_log.res = resid(m_arima_log)
## Residual Analysis
par (mfrow=c(2,2))
plot(m_arima_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_arima_log.res,main= 'ACF of the Model Residuals')
pacf(m_arima_log.res,main='PACF of the Model Residuals')
qqnorm(m_arima_log.res)
qqline(m_arima_log.res)
Box.test(m_arima_log$resid, lag = (aicc$p[1]+aicc$q[1]+1), type = "Box-Pierce", fitdf = (aicc$p[1]+aicc$q[1]))
Box.test(m_arima_log$resid, lag = (aicc$p[1]+aicc$q[1]+1), type = "Ljung-Box", fitdf = (aicc$p[1]+aicc$q[1]))
var_data_train <- cbind(ts_hosr,ts_icsa,ts_mspus,ts_permit)
var_data_train <- var_data_train[1:(n-15),]
VARselect(var_data_train, lag.max = 20)$selection
m_var_org=VAR(var_data_train, p=2)
summary(m_var_org$varresult$ts_hosr)
## Model Fitting: Restricted VAR
m_rs_var_org=restrict(m_var_org)
summary(m_rs_var_org$varresult$ts_hosr)
m_var_org.res = resid(m_var_org)[,"ts_hosr"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_var_org.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_var_org.res,main= 'ACF of the Model Residuals')
pacf(m_var_org.res,main='PACF of the Model Residuals')
qqnorm(m_var_org.res)
qqline(m_var_org.res)
m_rs_var_org.res = resid(m_rs_var_org)[,"ts_hosr"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_rs_var_org.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_rs_var_org.res,main= 'ACF of the Model Residuals')
pacf(m_rs_var_org.res,main='PACF of the Model Residuals')
qqnorm(m_rs_var_org.res)
qqline(m_rs_var_org.res)
var_data_train <- cbind(ts_hosr_log,ts_icsa_log)
var_data_train <- var_data_train[1:(n-15),]
VARselect(var_data_train, lag.max = 20)$selection
m_var_log=VAR(var_data_train, p=2)
summary(m_var_log$varresult$ts_hosr)
## Model Fitting: Restricted VAR
m_rs_var_log=restrict(m_var_log)
summary(m_rs_var_log$varresult$ts_hosr)
m_var_log.res = resid(m_var_log)[,"ts_hosr_log"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_var_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_var_log.res,main= 'ACF of the Model Residuals')
pacf(m_var_log.res,main='PACF of the Model Residuals')
qqnorm(m_var_log.res)
qqline(m_var_log.res)
m_rs_var_log.res = resid(m_rs_var_log)[,"ts_hosr_log"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_rs_var_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_rs_var_log.res,main= 'ACF of the Model Residuals')
pacf(m_rs_var_log.res,main='PACF of the Model Residuals')
qqnorm(m_rs_var_log.res)
qqline(m_rs_var_log.res)
##Model Selection
VARselect(cbind(ts_hosr[1:153],ts_icsa[1:153]), lag.max = 20,exogen=data.frame(ts_mspus[1:153],ts_permit[1:153]))$selection
## Model Fitting: Unrestricted VAR
m_varx_org=VAR(data.frame(hosr=ts_hosr[1:153],icsa=ts_icsa[1:153]), p=2,exogen=data.frame(mspus=ts_mspus[1:153],permit=ts_permit[1:153]))
summary(m_varx_org)
## Model Fitting: Restricted VAR
m_rs_varx_org=restrict(m_varx_org)
summary(m_rs_varx_org)
m_varx_org.res = resid(m_varx_org)[,"hosr"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_varx_org.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_varx_org.res,main= 'ACF of the Model Residuals')
pacf(m_varx_org.res,main='PACF of the Model Residuals')
qqnorm(m_varx_org.res)
qqline(m_varx_org.res)
m_rs_varx_org.res = resid(m_rs_varx_org)[,"hosr"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_rs_varx_org.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_rs_varx_org.res,main= 'ACF of the Model Residuals')
pacf(m_rs_varx_org.res,main='PACF of the Model Residuals')
qqnorm(m_rs_varx_org.res)
qqline(m_rs_varx_org.res)
columns = c("MSPUS","PERMIT","ICSA")
x_reg = training[, columns]
y = training[, "hosr"]
m_arimax_ori = auto.arima(y, xreg = as.matrix(x_reg))
m_arimax_ori
m_arimax_ori_pred = forecast(m_arimax_ori, xreg = as.matrix(testing[, columns]))
# plot
plot(m_arimax_ori_pred)
lines(fitted(m_arimax_ori), col="yellow")
lines(c(154:168), testing[, "hosr"])
m_arimax_ori.res = m_arimax_ori_pred$residuals
## Residual Analysis
par (mfrow=c(2,2))
plot(m_arimax_ori.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_arimax_ori.res,main= 'ACF of the Model Residuals')
pacf(m_arimax_ori.res,main='PACF of the Model Residuals')
qqnorm(m_arimax_ori.res)
qqline(m_arimax_ori.res)
Box.test(m_arimax_ori$resid, lag = 1, type = "Box-Pierce", fitdf = 1)
Box.test(m_arimax_ori$resid, lag = 1, type = "Ljung-Box", fitdf = 1)
columns = c("ICSA")
x_reg = training_log[, columns]
y = training_log[, "hosr"]
m_arimax_log = auto.arima(y, xreg = as.matrix(x_reg))
m_arimax_log
m_arimax_log_pred = forecast(m_arimax_log, xreg = as.matrix(testing_log[, columns]))
# plot
plot(m_arimax_log_pred)
lines(fitted(m_arimax_log), col="yellow")
lines(c(154:168), testing_log[, "hosr"])
m_arimax_log.res = m_arimax_log_pred$residuals
## Residual Analysis
par (mfrow=c(2,2))
plot(m_arimax_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_arimax_log.res,main= 'ACF of the Model Residuals')
pacf(m_arimax_log.res,main='PACF of the Model Residuals')
qqnorm(m_arimax_log.res)
qqline(m_arimax_log.res)
Box.test(m_arimax_log$resid, lag = 4, type = "Box-Pierce", fitdf = 4)
Box.test(m_arimax_log$resid, lag = 4, type = "Ljung-Box", fitdf = 4)
n = length(time.pts)
nfit=n-15
newdata = data.frame(x=time.pts[(nfit+1):n])
gam.pred= predict(m_spl_org,newdata = newdata,interval=c("prediction"))
outpredresid = predict(m_arma_org,n.ahead=15)$pred
outpredresid.se = predict(m_arma_org,n.ahead=15)$se
## Add up the predictions
m_gam_arma_org.pred = outpredresid+gam.pred
m_gam_arma_org.ubound= m_gam_arma_org.pred + 1.96 * outpredresid.se
m_gam_arma_org.lbound=m_gam_arma_org.pred - 1.96 * outpredresid.se
n = length(time.pts)
nfit=n-15
newdata = data.frame(x=time.pts[(nfit+1):n])
gam.pred= predict(m_spl_log,newdata = newdata,interval=c("prediction"))
outpredresid = predict(m_arma_log,n.ahead=15)$pred
outpredresid.se=predict(m_arma_log,n.ahead=15)$se
## Add up the predictions
m_gam_arma_log.pred = exp(outpredresid+gam.pred)
m_gam_arma_log.ubound=exp(outpredresid+gam.pred + 1.96 * outpredresid.se)
m_gam_arma_log.lbound=exp(outpredresid+gam.pred - 1.96 * outpredresid.se)
m_var_org.pred = predict(m_var_org,n.ahead=15)$fcst$ts_hosr[,1]
m_var_org.pred.lbound=predict(m_var_org,n.ahead=15)$fcst$ts_hosr[,2]
m_var_org.pred.ubound=predict(m_var_org,n.ahead=15)$fcst$ts_hosr[,3]
m_rs_var_org.pred = predict(m_rs_var_org,n.ahead=15)$fcst$ts_hosr[,1]
m_rs_var_org.pred.lbound=predict(m_rs_var_org,n.ahead=15)$fcst$ts_hosr[,2]
m_rs_var_org.pred.ubound=predict(m_rs_var_org,n.ahead=15)$fcst$ts_hosr[,3]
m_var_log.pred = exp(predict(m_var_log,n.ahead=15)$fcst$ts_hosr[,1])
m_var_log.pred.lbound=exp(predict(m_var_log,n.ahead=15)$fcst$ts_hosr[,2])
m_var_log.pred.ubound=exp(predict(m_var_log,n.ahead=15)$fcst$ts_hosr[,3])
m_rs_var_log.pred = exp(predict(m_rs_var_log,n.ahead=15)$fcst$ts_hosr[,1])
m_rs_var_log.pred.lbound=exp(predict(m_rs_var_log,n.ahead=15)$fcst$ts_hosr[,2])
m_rs_var_log.pred.ubound=exp(predict(m_rs_var_log,n.ahead=15)$fcst$ts_hosr[,3])
x = data.frame(mspus=ts_mspus[154:168],permit=ts_permit[154:168])
m_varx_org.pred = predict(m_varx_org,n.ahead=15,dumvar=x)$fcst$hosr[,1]
m_varx_org.pred.lbound = predict(m_varx_org,n.ahead=15,dumvar=x)$fcst$hosr[,2]
m_varx_org.pred.ubound = predict(m_varx_org,n.ahead=15,dumvar=x)$fcst$hosr[,3]
m_rs_varx_org.pred = predict(m_rs_varx_org,n.ahead=15,dumvar=x)$fcst$hosr[,1]
m_rs_varx_org.pred.lbound = predict(m_rs_varx_org,n.ahead=15,dumvar=x)$fcst$hosr[,2]
m_rs_varx_org.pred.ubound = predict(m_rs_varx_org,n.ahead=15,dumvar=x)$fcst$hosr[,3]
m_arima_ori_pred = predict(m_arima_ori,n.ahead=15)
m_arima_ori_pred.pred = m_arima_ori_pred$pred
m_arima_ori_pred.ubound = m_arima_ori_pred.pred+1.96*m_arima_ori_pred$se
m_arima_ori_pred.lbound = m_arima_ori_pred.pred-1.96*m_arima_ori_pred$se
m_arima_log_pred = predict(m_arima_log, n.ahead=15)
m_arima_log_pred.pred = exp(m_arima_log_pred$pred)
m_arima_log_pred.ubound = exp(m_arima_log_pred$pred+1.96*m_arima_log_pred$se)
m_arima_log_pred.lbound = exp(m_arima_log_pred$pred-1.96*m_arima_log_pred$se)
m_arimax_ori_pred.pred = data.frame(m_arimax_ori_pred)[,"Point.Forecast"]
m_arimax_ori_pred.ubound = data.frame(m_arimax_ori_pred)[, "Hi.95"]
m_arimax_ori_pred.lbound = data.frame(m_arimax_ori_pred)[, "Lo.95"]
m_arimax_log_pred.pred = exp(data.frame(m_arimax_log_pred)[,"Point.Forecast"])
m_arimax_log_pred.ubound = exp(data.frame(m_arimax_log_pred)[, "Hi.95"])
m_arimax_log_pred.lbound = exp(data.frame(m_arimax_log_pred)[, "Lo.95"])
## Combined Forecast Plot
ts.plot(ts_hosr,main="All Forecasts",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_gam_arma_org.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_gam_arma_log.pred,start=2018.25,freq=4),lwd=2,col="orange")
lines(ts(m_var_org.pred,start=2018.25,freq=4),lwd=2,col="blue")
lines(ts(m_rs_var_org.pred,start=2018.25,freq=4),lwd=2,col="lightblue")
lines(ts(m_var_log.pred,start=2018.25,freq=4),lwd=2,col="darkgreen")
lines(ts(m_rs_var_log.pred,start=2018.25,freq=4),lwd=2,col="green")
lines(ts(m_varx_org.pred,start=2018.25,freq=4),lwd=2,col="lightgreen")
lines(ts(m_rs_varx_org.pred,start=2018.25,freq=4),lwd=2,col="pink")
lines(ts(m_arima_ori_pred.pred,start=2018.25,freq=4),lwd=2,col="yellow")
lines(ts(m_arima_log_pred.pred,start=2018.25,freq=4),lwd=2,col="grey")
lines(ts(m_arimax_ori_pred.pred,start=2018.25,freq=4),lwd=2,col="darkblue")
lines(ts(m_arimax_log_pred.pred,start=2018.25,freq=4),lwd=2,col="darkred")
legend(x=1980,y=69,legend=c("gam_arma_o","gam_arma_l","var_o","rs_var_o","var_l","rs_var_l","varx_o","rs_varx_o","arima_o","arima_l","arimax_o","arimax_l"),pch=1,
pt.lwd = 2, col=c("red","orange","blue","lightblue","darkgreen","green","lightgreen","pink","yellow","grey","darkblue","darkred"))
## Individual Plots
par(mfrow=c(3, 2))
##Trend Estimation + ARMA
ts.plot(ts_hosr,main="Org Forecast:spline Trend + ARMA",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_gam_arma_org.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_gam_arma_org.ubound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_gam_arma_org.lbound,start=2018.25,freq=4),lwd=3,col="blue")
ts.plot(ts_hosr,main="Log Forecast:spline Trend + ARMA",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_gam_arma_log.pred,start=2018.25,freq=4),lwd=2,col="green")
lines(ts(m_gam_arma_log.ubound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_gam_arma_log.lbound,start=2018.25,freq=4),lwd=3,col="blue")
## VAR Ori
ts.plot(ts_hosr,main="Ori Forecast:Unrestrict VAR",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_var_org.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_var_org.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_var_org.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
ts.plot(ts_hosr,main="Ori Forecast:Restrict VAR",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_rs_var_org.pred,start=2018.25,freq=4),lwd=2,col="green")
lines(ts(m_rs_var_org.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_rs_var_org.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
##VAR Log
ts.plot(ts_hosr,main="Log Forecast:Unrestrict VAR",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_var_log.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_var_log.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_var_log.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
ts.plot(ts_hosr,main="Log Forecast:Restrict VAR",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_rs_var_log.pred,start=2018.25,freq=4),lwd=2,col="green")
lines(ts(m_rs_var_log.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_rs_var_log.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
par(mfrow=c(3, 2))
## VARX
ts.plot(ts_hosr,main="Ori Forecast:Unrestrict VARX",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_varx_org.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_varx_org.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_varx_org.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
ts.plot(ts_hosr,main="Ori Forecast:Restrict VARX",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_rs_var_log.pred,start=2018.25,freq=4),lwd=2,col="green")
lines(ts(m_rs_var_log.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_rs_var_log.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
##ARIMA
ts.plot(ts_hosr,main="Ori Forecasts:ARIMA",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_arima_ori_pred.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_arima_ori_pred.ubound,start=2018.25,freq=4),lwd=2,col="blue")
lines(ts(m_arima_ori_pred.lbound,start=2018.25,freq=4),lwd=2,col="blue")
ts.plot(ts_hosr,main="Log Forecasts:ARIMA",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_arima_log_pred.pred,start=2018.25,freq=4),lwd=3,col="green")
lines(ts(m_arima_log_pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_arima_log_pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
##ARIMAX
ts.plot(ts_hosr,main="Ori Forecasts:ARIMAX",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_arimax_ori_pred.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_arimax_ori_pred.ubound,start=2018.25,freq=4),lwd=2,col="blue")
lines(ts(m_arimax_ori_pred.lbound,start=2018.25,freq=4),lwd=2,col="blue")
ts.plot(ts_hosr,main="Log Forecasts:ARIMAX",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_arimax_log_pred.pred,start=2018.25,freq=4),lwd=3,col="green")
lines(ts(m_arimax_log_pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_arimax_log_pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
##ARIMAX
ts.plot(ts_hosr,main="Ori Forecasts:ARIMAX",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_arimax_ori_pred.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_arimax_ori_pred.ubound,start=2018.25,freq=4),lwd=2,col="blue")
lines(ts(m_arimax_ori_pred.lbound,start=2018.25,freq=4),lwd=2,col="blue")
##VAR Log
ts.plot(ts_hosr,main="Log Forecast:Unrestrict VAR",ylab="homeownership rate",ylim=c(62,69))
lines(ts(m_var_log.pred,start=2018.25,freq=4),lwd=2,col="red")
lines(ts(m_var_log.pred.lbound,start=2018.25,freq=4),lwd=3,col="blue")
lines(ts(m_var_log.pred.ubound,start=2018.25,freq=4),lwd=3,col="blue")
cat("\ngam_arma_org MAPE:",mean(abs(m_gam_arma_org.pred-testing$hosr)/testing$hosr),
"\ngam_arma_org PM:",sum((m_gam_arma_org.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\ngam_arma_log MAPE:",mean(abs(m_gam_arma_log.pred-testing$hosr)/testing$hosr),
"\ngam_arma_log PM:",sum((m_gam_arma_log.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_var_org MAPE:",mean(abs(m_var_org.pred-testing$hosr)/testing$hosr),
"\nm_var_org PM:",sum((m_var_org.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_var_log MAPE:",mean(abs(m_var_log.pred-testing$hosr)/testing$hosr),
"\nm_var_log PM:",sum((m_var_log.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_rs_var_org MAPE:",mean(abs(m_rs_var_org.pred-testing$hosr)/testing$hosr),
"\nm_rs_var_org PM:",sum((m_rs_var_org.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_rs_var_log MAPE:",mean(abs(m_rs_var_log.pred-testing$hosr)/testing$hosr),
"\nm_rs_var_log PM:",sum((m_rs_var_log.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_varx_org MAPE:",mean(abs(m_varx_org.pred-testing$hosr)/testing$hosr),
"\nm_varx_org PM:",sum((m_varx_org.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_rs_varx_org MAPE:",mean(abs(m_rs_varx_org.pred-testing$hosr)/testing$hosr),
"\nm_rs_varx_org PM:",sum((m_rs_varx_org.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2),
"\nm_arima_ori MAPE:",mean(abs((m_arima_ori_pred.pred)/testing$hosr)),
"\nm_arima_ori PM:",sum(((m_arima_ori_pred.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2)),
"\nm_arima_log MAPE:",mean(abs((m_arima_log_pred.pred)/testing$hosr)),
"\nm_arima_log PM:",sum(((m_arima_log_pred.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2)),
"\nm_arimax_ori MAPE:",mean(abs((m_arimax_ori_pred.pred)/testing$hosr)),
"\nm_arimax_ori PM:",sum(((m_arimax_ori_pred.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2)),
"\nm_arimax_log MAPE:",mean(abs((m_arimax_log_pred.pred)/testing$hosr)),
"\nm_arimax_log PM:",sum(((m_arimax_log_pred.pred-testing$hosr)^2)/sum((testing$hosr-mean(testing$hosr))^2)))
m_var_log.res = resid(m_var_log)[,"ts_hosr_log"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_var_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_var_log.res,main= 'ACF of VAR log Residuals')
pacf(m_var_log.res,main='PACF of VAR log Residuals')
qqnorm(m_var_log.res)
qqline(m_var_log.res)
m_rs_var_log.res = resid(m_rs_var_log)[,"ts_hosr_log"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_rs_var_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_rs_var_log.res,main= 'ACF of the Model Residuals')
pacf(m_rs_var_log.res,main='PACF of the Model Residuals')
qqnorm(m_rs_var_log.res)
qqline(m_rs_var_log.res)
m_var_log.res = resid(m_var_log)[,"ts_hosr_log"]
## Residual Analysis
par (mfrow=c(2,2))
plot(m_var_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_var_log.res,main= 'ACF of VAR log Residuals')
pacf(m_var_log.res,main='PACF of VAR log Residuals')
qqnorm(m_var_log.res)
qqline(m_var_log.res)
m_rs_var_log.res = resid(m_rs_var_log)[,"ts_hosr_log"]
arch.test(m_var_log)
normality.test(m_var_log)
serial.test(m_var_log)
## Residual Analysis
par (mfrow=c(2,2))
plot(m_rs_var_log.res, ylab='Standardized Residuals')
abline(h=0)
acf(m_rs_var_log.res,main= 'ACF of the Model Residuals')
pacf(m_rs_var_log.res,main='PACF of the Model Residuals')
qqnorm(m_rs_var_log.res)
qqline(m_rs_var_log.res)
m_arimax_ori_pred.pred = data.frame(m_arimax_ori_pred)[,"Point.Forecast"]
m_arimax_ori_pred.ubound = data.frame(m_arimax_ori_pred)[, "Hi.95"]
m_arimax_ori_pred.lbound = data.frame(m_arimax_ori_pred)[, "Lo.95"]
m_arimax_log_pred.pred = exp(data.frame(m_arimax_log_pred)[,"Point.Forecast"])
m_arimax_log_pred.ubound = exp(data.frame(m_arimax_log_pred)[, "Hi.95"])
m_arimax_log_pred.lbound = exp(data.frame(m_arimax_log_pred)[, "Lo.95"])
